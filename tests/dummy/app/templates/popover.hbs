<div class="bs-docs-section" id="popover">
  <h1>Popover</h1>
  <p>
    EmberStrap provides a handlebars helper to bind a popover to an element of DOM.
  </p>

  <h3>Example</h3>
  <div class="bs-example">
    <button class="btn btn-primary" id="popover-example">Show popover</button>
    {{#es-popover for="popover-example" as |popover|}}
      Some content
      <button class="btn btn-default" type="button" {{action 'hide' target=popover}}>Close</button>
    {{/es-popover}}
  </div>

  {{code-snippet name="popover.hbs"}}

  <h3>Options</h3>
  <table class="table table-bordered table-striped">
    <thead>
      <tr>
        <th>Name</th>
        <th>Type</th>
        <th>Default</th>
        <th>Description</th>
      </tr>
    </thead>

    <tbody>
      <tr>
        <td>isShown</td>
        <td>boolean</td>
        <td>false</td>
        <td><code>true</code> if the popover is shown. You can close it setting <code>isShown</code> to <code>false</code></td>.
      </tr>
      <tr>
        <td>animation</td>
        <td>boolean</td>
        <td>true</td>
        <td>Apply a CSS fade transition to the popover</td>
      </tr>
      <tr>
        <td>delay</td>
        <td>number | object</td>
        <td>0</td>
        <td>
          Delay showing and hiding the popover (ms) - does not apply to manual trigger type<br>
          If a number is supplied, delay is applied to both hide/show<br>
          Object structure is: <code>delay: { "show": 500, "hide": 100 }</code>
        </td>
      </tr>
      <tr>
        <td>placement</td>
        <td>string | function</td>
        <td>'right'</td>
        <td>
          How to position the popover - top | bottom | left | right | auto.<br>
          When "auto" is specified, it will dynamically reorient the popover. For example, if placement is "auto left", the popover will display to the left when possible, otherwise it will display right.<br>
          When a function is used to determine the placement, it is called with the popover DOM node as its first argument and the triggering element DOM node as its second. The <code>this</code> context is set to the popover instance.
        </td>
      </tr>
      <tr>
        <td>title</td>
        <td>string | function</td>
        <td>''</td>
        <td>
          Default title value if <code>title</code> attribute isn't present.
          If a function is given, it will be called with its <code>this</code> reference set to the element that the popover is attached to.
        </td>
      </tr>
      <tr>
        <td>mode</td>
        <td>string</td>
        <td>'click'</td>
        <td>
          How popover is triggered - click | hover | focus | manual. You may pass multiple triggers; separate them with a space. <code>manual</code> cannot be combined with any other trigger.
        </td>
      </tr>
    </tbody>
  </table>
</div>
